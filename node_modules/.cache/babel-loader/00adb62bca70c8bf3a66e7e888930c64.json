{"ast":null,"code":"var _jsxFileName = \"/home/discovery/Documentos/repos/work/clock--ie/src/containers/app.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import { compose } from 'redux';\n// import { connect } from 'react-redux';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Intl from '../intl';\n\nclass App extends Component {\n  // componentDidMount() {\n  //   ReactGA.event({\n  //     category: 'UserFlow',\n  //     action: 'LMS_START',\n  //   });\n  // }\n  render() {\n    return React.createElement(Intl, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Route, Object.assign({\n      path: \"/\",\n      component: Clock\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }))));\n  }\n\n} // App.propTypes = {\n// };\n// App.defaultProps = {\n// };\n// const mapStateToProps = ({ firebase: { authError, auth, profile }, signin }) => ({\n//   authError,\n//   auth,\n//   profile,\n//   signInCredentials: signin.data,\n//   addUserLoading: signin.addUserLoading,\n//   addUserLoaded: signin.addUserLoaded,\n//   addUserError: signin.addUserError,\n//   addUserData: signin.addUserData,\n// });\n// const mapDispatchToProps = {\n//   updateSigninError,\n//   resetFetchAndAddUser,\n// };\n// export default compose(\n//   firestoreConnect(),\n//   connect(mapStateToProps, mapDispatchToProps),\n// )(App);\n\n\nexport default App;","map":{"version":3,"sources":["/home/discovery/Documentos/repos/work/clock--ie/src/containers/app.js"],"names":["React","Component","PropTypes","BrowserRouter","Router","Route","Switch","Intl","App","render","props","Clock"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AAEAQ,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD,oBAAU,KAAKC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,SAAS,EAAEC;AAFb,OAGM,KAAKD,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AA4BD;;AArCyB,C,CAwC5B;AAEA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;AACA,eAAgBF,GAAhB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Intl from '../intl';\n\nclass App extends Component {\n  // componentDidMount() {\n  //   ReactGA.event({\n  //     category: 'UserFlow',\n  //     action: 'LMS_START',\n  //   });\n  // }\n\n  render() {\n    return (\n      <Intl {...this.props}>\n        <Router>\n          <Route\n            path=\"/\"\n            component={Clock}\n            {...this.props}\n          />\n          {/* {this.props.auth.isEmpty\n            ? (\n              <Route\n                path=\"/:action?/:cohortid?\"\n                component={SignIn}\n                authError={this.props.authError}\n              />\n            )\n            : (\n              <ScrollToTop>\n                <Switch>\n                  <WrappedRoute path=\"/settings\" component={Settings} {...this.props} />\n                  <WrappedRoute exact path=\"/\" component={Dashboard} {...this.props} />\n                </Switch>\n              </ScrollToTop>\n            )\n          } */}\n        </Router>\n      </Intl>\n    );\n  }\n}\n\n// App.propTypes = {\n\n// };\n\n\n// App.defaultProps = {\n  \n// };\n\n\n// const mapStateToProps = ({ firebase: { authError, auth, profile }, signin }) => ({\n//   authError,\n//   auth,\n//   profile,\n//   signInCredentials: signin.data,\n//   addUserLoading: signin.addUserLoading,\n//   addUserLoaded: signin.addUserLoaded,\n//   addUserError: signin.addUserError,\n//   addUserData: signin.addUserData,\n// });\n\n\n// const mapDispatchToProps = {\n//   updateSigninError,\n//   resetFetchAndAddUser,\n// };\n\n\n// export default compose(\n//   firestoreConnect(),\n//   connect(mapStateToProps, mapDispatchToProps),\n// )(App);\nexport default (App);"]},"metadata":{},"sourceType":"module"}