{"ast":null,"code":"const sortByTime = (a, b) => {\n  if (a.time < b.time) {\n    return 1;\n  }\n\n  if (a.time > b.time) {\n    return -1;\n  }\n\n  return 0;\n}; // const bestTime = (attempts) => {\n//   const best = attempts.sort(sortByTime);\n//   return getTime(best[0]);\n// }\n// const AverageTime = (attempts) => {\n//   const average = attempts.reduce((acc, current) => acc + current.time, 0) / attempts.length;\n//   return getTime({ time: average });\n// }\n\n\nexport default sortByTime;","map":{"version":3,"sources":["/home/discovery/Documentos/repos/work/clock--ie/src/utils/sort.js"],"names":["sortByTime","a","b","time"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3B,MAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnB,WAAO,CAAP;AACD;;AACD,MAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnB,WAAO,CAAC,CAAR;AACD;;AACD,SAAO,CAAP;AACD,CARD,C,CAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeH,UAAf","sourcesContent":["const sortByTime = (a, b) => {\n  if (a.time < b.time) {\n    return 1;\n  }\n  if (a.time > b.time) {\n    return -1;\n  }\n  return 0;\n};\n\n// const bestTime = (attempts) => {\n//   const best = attempts.sort(sortByTime);\n//   return getTime(best[0]);\n// }\n\n// const AverageTime = (attempts) => {\n//   const average = attempts.reduce((acc, current) => acc + current.time, 0) / attempts.length;\n//   return getTime({ time: average });\n// }\n\nexport default sortByTime;"]},"metadata":{},"sourceType":"module"}