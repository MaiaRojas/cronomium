{"ast":null,"code":"var _jsxFileName = \"/home/discovery/Documentos/repos/work/clock--ie/src/containers/clock.jsx\";\nimport React from 'react'; // import { injectIntl } from 'react-intl';\n// import PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles'; // import Typography from '@material-ui/core/Typography';\n\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport { Typography } from '@material-ui/core';\nimport WatchList from '../components/watch-list';\nimport Time from '../components/time';\nimport sortByTime from '../utils/sort';\nimport padNumber from '../utils/padNumber';\n\nconst styles = theme => ({\n  bebe: {\n    fontSize: 32\n  },\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '100vh',\n    backgroundColor: '#333',\n    textAlign: 'center',\n    flexDirection: 'column'\n  },\n  paper: {\n    margin: theme.spacing(4),\n    padding: `${theme.spacing(3)}px ${theme.spacing(4)}px ${theme.spacing(4)}px`,\n    width: '100%',\n    maxWidth: theme.leftDrawerWidth\n  },\n  contentLogo: {\n    width: '100%',\n    maxWidth: theme.leftDrawerWidth\n  },\n  logo: {\n    width: '100%',\n    display: 'block',\n    margin: `0 auto ${theme.spacing(1)}px`\n  }\n});\n\nfunction StopwatchDisplay({\n  time\n}) {\n  const hours = padNumber(Math.floor(time / 3600000));\n  const minutes = padNumber(Math.floor(time / 60000) % 60);\n  const seconds = padNumber(Math.floor(time / 1000) % 60); // Tip: 1000 ms = 1 second\n\n  const c = padNumber(Math.round(time / 10) % 100);\n  return React.createElement(\"p\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, hours, \":\", minutes, \":\", seconds, \".\", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, c));\n}\n\nconst StopwatchControls = ({\n  onToggle,\n  running\n}) => React.createElement(Fab, {\n  onClick: onToggle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, running ? 'STOP' : 'START');\n\nconst bestTime = attempts => {\n  if (attempts.length === 0) {\n    return '00:00:00';\n  }\n\n  return Time(attempts.sort(sortByTime)[0]);\n};\n\nconst AverageTime = attempts => {\n  if (attempts.length === 0) {\n    return '00:00:00';\n  }\n\n  const average = attempts.reduce((acc, current) => acc + current.time, 0) / attempts.length;\n  return Time({\n    time: average\n  });\n};\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      running: false,\n      date: ''\n    };\n    this.toggle = this.toggle.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  toggle() {\n    if (!this.state.running) {\n      this.startTime = +new Date();\n      this.tick();\n    } else {\n      const dataLocal = JSON.parse(localStorage.getItem('attempts'));\n\n      if (dataLocal) {\n        dataLocal.push({\n          time: this.state.time,\n          date: new Date()\n        });\n        localStorage.setItem('attempts', JSON.stringify(dataLocal));\n      } else {\n        localStorage.setItem('attempts', JSON.stringify([{\n          time: this.state.time,\n          date: new Date()\n        }]));\n      }\n\n      this.update(false);\n      this.setState({\n        time: 0\n      });\n      clearTimeout(this.timeout);\n    }\n  }\n\n  tick() {\n    this.update(true);\n    this.timeout = setTimeout(this.tick);\n  }\n\n  update(running) {\n    this.setState({\n      time: +new Date() - this.startTime,\n      running\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const attempts = JSON.parse(localStorage.getItem('attempts')) || [];\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stopwatch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Time, {\n      time: this.state.time,\n      done: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(StopwatchControls, {\n      onToggle: this.toggle,\n      running: this.state.running,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"nav\",\n      subheader: React.createElement(ListSubheader, {\n        component: \"div\",\n        id: \"nested-list-subheader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Intento de Vueltas\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, WatchList(attempts))), React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/history`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      icon: React.createElement(TimelineIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }),\n      label: \"History\",\n      clickable: true,\n      color: \"primary\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Best Time\"), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, bestTime(attempts)))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Average Time\"), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, AverageTime(attempts))))))));\n  }\n\n} // Clock.propTypes = {\n// };\n\n\nexport default withStyles(styles)(Clock);","map":{"version":3,"sources":["/home/discovery/Documentos/repos/work/clock--ie/src/containers/clock.jsx"],"names":["React","withStyles","Link","Button","Paper","Fab","ListSubheader","List","Card","CardContent","Chip","TimelineIcon","Typography","WatchList","Time","sortByTime","padNumber","styles","theme","bebe","fontSize","root","display","justifyContent","alignItems","minHeight","backgroundColor","textAlign","flexDirection","paper","margin","spacing","padding","width","maxWidth","leftDrawerWidth","contentLogo","logo","StopwatchDisplay","time","hours","Math","floor","minutes","seconds","c","round","StopwatchControls","onToggle","running","bestTime","attempts","length","sort","AverageTime","average","reduce","acc","current","Clock","Component","constructor","props","state","date","toggle","bind","tick","startTime","Date","dataLocal","JSON","parse","localStorage","getItem","push","setItem","stringify","update","setState","clearTimeout","timeout","setTimeout","render","classes","content"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { injectIntl } from 'react-intl';\n// import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\n\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport { Typography } from '@material-ui/core';\n\nimport WatchList from '../components/watch-list';\nimport Time from '../components/time';\nimport sortByTime from '../utils/sort';\nimport padNumber from '../utils/padNumber';\n\n\nconst styles = theme => ({\n  bebe: {\n    fontSize: 32,\n  },\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '100vh',\n    backgroundColor: '#333',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  paper: {\n    margin: theme.spacing(4),\n    padding: `${theme.spacing(3)}px ${theme.spacing(4)}px ${theme.spacing(4)}px`,\n    width: '100%',\n    maxWidth: theme.leftDrawerWidth,\n  },\n  contentLogo: {\n    width: '100%',\n    maxWidth: theme.leftDrawerWidth,\n  },\n  logo: {\n    width: '100%',\n    display: 'block',\n    margin: `0 auto ${theme.spacing(1)}px`,\n  },\n});\n\n\nfunction StopwatchDisplay({ time }) {\n  const hours = padNumber(Math.floor(time / 3600000));\n  const minutes = padNumber(Math.floor(time / 60000) % 60);\n  const seconds = padNumber(Math.floor(time / 1000) % 60); // Tip: 1000 ms = 1 second\n  const c = padNumber(Math.round(time / 10) % 100);\n  return (\n    <p className=\"time\">\n      {hours}:{minutes}:{seconds}.<small>{c}</small>\n    </p>\n  );\n}\n\nconst StopwatchControls = ({ onToggle, running}) =>\n  <Fab onClick={onToggle}>\n    {running ? 'STOP' : 'START'}\n  </Fab>\n\nconst bestTime = (attempts) => {\n  if (attempts.length === 0){\n    return '00:00:00';\n  }\n  return Time(attempts.sort(sortByTime)[0])\n}\n\nconst AverageTime = (attempts) => {\n  if (attempts.length === 0){\n    return '00:00:00';\n  }\n  const average = attempts.reduce((acc, current) => acc + current.time, 0) / attempts.length;\n  return Time({ time: average });\n}\n\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      running: false,\n      date: '',\n    };\n    this.toggle = this.toggle.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n  toggle() {\n    if (!this.state.running) {\n      this.startTime = +new Date();\n      this.tick();\n    } else {\n      const dataLocal = JSON.parse(localStorage.getItem('attempts'));\n      if (dataLocal){\n        dataLocal.push({ time: this.state.time, date: new Date() })\n        localStorage.setItem('attempts', JSON.stringify(dataLocal));\n      } else{\n        localStorage.setItem('attempts', JSON.stringify([{ time: this.state.time, date: new Date() }]))\n      }\n      this.update(false);\n      this.setState({ time: 0 });\n      clearTimeout(this.timeout);\n    }\n  }\n  tick() {\n    this.update(true);\n    this.timeout = setTimeout(this.tick);\n  }\n  update(running) {\n    this.setState({\n      time: +new Date() - this.startTime,\n      running\n    });\n  }\n  render() {\n    const { classes } = this.props;\n    const attempts = JSON.parse(localStorage.getItem('attempts')) || [];\n    return (\n      <div className={classes.root}>\n        <div className=\"stopwatch\">\n          <Time time={this.state.time} done='time' />\n          <StopwatchControls onToggle={this.toggle} running={this.state.running} />\n          <Paper>\n            <List\n              component=\"nav\"\n              subheader={\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                  Intento de Vueltas\n                </ListSubheader>\n              }\n            >\n              {WatchList(attempts)}\n            </List>\n          </Paper>\n          <Paper>\n            <Link to={`/history`}>\n              <Chip\n                icon={<TimelineIcon />}\n                label=\"History\"\n                clickable\n                color=\"primary\"\n                variant=\"outlined\"\n              />\n            </Link>\n            <>\n              <Card>\n                <CardContent className={classes.content}>\n                  <Typography component=\"h5\" variant=\"h5\">\n                    Best Time\n                  </Typography>\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                    {bestTime(attempts)}\n                  </Typography>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className={classes.content}>\n                  <Typography component=\"h5\">\n                    Average Time\n                  </Typography>\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                    {AverageTime(attempts)}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </>\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Clock.propTypes = {\n\n// };\n\n\nexport default withStyles(styles)(Clock);\n"]},"metadata":{},"sourceType":"module"}