{"ast":null,"code":"var _jsxFileName = \"/home/discovery/Documentos/repos/work/clock--ie/src/intl/index.jsx\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\n// import { firestoreConnect } from 'react-redux-firebase';\n\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport es from 'react-intl/locale-data/es';\nimport messages from './messages';\naddLocaleData([...en, ...es]);\nconst prefixToLocale = {\n  en: 'en-US',\n  es: 'es-ES'\n};\nconst browserLocale = navigator.languages && navigator.languages[0] || navigator.language || navigator.userLanguage;\n\nconst getLocale = preferredLang => {\n  if (preferredLang && messages[preferredLang]) {\n    return preferredLang;\n  }\n\n  if (preferredLang && messages[prefixToLocale[preferredLang.split('-')[0]]]) {\n    return prefixToLocale[preferredLang.split('-')[0]];\n  }\n\n  if (browserLocale && messages[browserLocale]) {\n    return browserLocale;\n  }\n\n  if (browserLocale && messages[prefixToLocale[browserLocale.split('-')[0]]]) {\n    return prefixToLocale[browserLocale.split('-')[0]];\n  }\n\n  return 'es-ES';\n};\n\nconst Intl = ({\n  profile,\n  children\n}) => {\n  // const locale = getLocale(profile.locale);\n  const locale = 'es-ES';\n  return React.createElement(IntlProvider, {\n    locale: locale,\n    messages: messages[locale],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, children);\n};\n\nIntl.propTypes = {// profile: PropTypes.shape({\n  //   locale: PropTypes.string,\n  // }).isRequired,\n  // children: PropTypes.element.isRequired,\n  // campuses: PropTypes.arrayOf(PropTypes.shape({})),\n}; // Intl.defaultProps = {\n//   campuses: undefined,\n// };\n\nexport default Intl;","map":{"version":3,"sources":["/home/discovery/Documentos/repos/work/clock--ie/src/intl/index.jsx"],"names":["React","addLocaleData","IntlProvider","en","es","messages","prefixToLocale","browserLocale","navigator","languages","language","userLanguage","getLocale","preferredLang","split","Intl","profile","children","locale","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGAJ,aAAa,CAAC,CAAC,GAAGE,EAAJ,EAAQ,GAAGC,EAAX,CAAD,CAAb;AAGA,MAAME,cAAc,GAAG;AACrBH,EAAAA,EAAE,EAAE,OADiB;AAErBC,EAAAA,EAAE,EAAE;AAFiB,CAAvB;AAMA,MAAMG,aAAa,GAAIC,SAAS,CAACC,SAAV,IAAuBD,SAAS,CAACC,SAAV,CAAoB,CAApB,CAAxB,IACjBD,SAAS,CAACE,QADO,IAEjBF,SAAS,CAACG,YAFf;;AAKA,MAAMC,SAAS,GAAIC,aAAD,IAAmB;AACnC,MAAIA,aAAa,IAAIR,QAAQ,CAACQ,aAAD,CAA7B,EAA8C;AAC5C,WAAOA,aAAP;AACD;;AACD,MAAIA,aAAa,IAAIR,QAAQ,CAACC,cAAc,CAACO,aAAa,CAACC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAAf,CAA7B,EAA4E;AAC1E,WAAOR,cAAc,CAACO,aAAa,CAACC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAArB;AACD;;AAED,MAAIP,aAAa,IAAIF,QAAQ,CAACE,aAAD,CAA7B,EAA8C;AAC5C,WAAOA,aAAP;AACD;;AACD,MAAIA,aAAa,IAAIF,QAAQ,CAACC,cAAc,CAACC,aAAa,CAACO,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAAf,CAA7B,EAA4E;AAC1E,WAAOR,cAAc,CAACC,aAAa,CAACO,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAArB;AACD;;AAED,SAAO,OAAP;AACD,CAhBD;;AAmBA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,OADY;AAEZC,EAAAA;AAFY,CAAD,KAGP;AACJ;AACA,QAAMC,MAAM,GAAG,OAAf;AACA,SACE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAA8B,IAAA,QAAQ,EAAEb,QAAQ,CAACa,MAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CAXD;;AAcAF,IAAI,CAACI,SAAL,GAAiB,CACf;AACA;AACA;AACA;AACA;AALe,CAAjB,C,CASA;AACA;AACA;;AAGA,eAAgBJ,IAAhB","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\n// import { firestoreConnect } from 'react-redux-firebase';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport es from 'react-intl/locale-data/es';\nimport messages from './messages';\n\n\naddLocaleData([...en, ...es]);\n\n\nconst prefixToLocale = {\n  en: 'en-US',\n  es: 'es-ES',\n};\n\n\nconst browserLocale = (navigator.languages && navigator.languages[0])\n  || navigator.language\n  || navigator.userLanguage;\n\n\nconst getLocale = (preferredLang) => {\n  if (preferredLang && messages[preferredLang]) {\n    return preferredLang;\n  }\n  if (preferredLang && messages[prefixToLocale[preferredLang.split('-')[0]]]) {\n    return prefixToLocale[preferredLang.split('-')[0]];\n  }\n\n  if (browserLocale && messages[browserLocale]) {\n    return browserLocale;\n  }\n  if (browserLocale && messages[prefixToLocale[browserLocale.split('-')[0]]]) {\n    return prefixToLocale[browserLocale.split('-')[0]];\n  }\n\n  return 'es-ES';\n};\n\n\nconst Intl = ({\n  profile,\n  children,\n}) => {\n  // const locale = getLocale(profile.locale);\n  const locale = 'es-ES';\n  return (\n    <IntlProvider locale={locale} messages={messages[locale]}>\n      {children}\n    </IntlProvider>\n  );\n};\n\n\nIntl.propTypes = {\n  // profile: PropTypes.shape({\n  //   locale: PropTypes.string,\n  // }).isRequired,\n  // children: PropTypes.element.isRequired,\n  // campuses: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\n\n// Intl.defaultProps = {\n//   campuses: undefined,\n// };\n\n\nexport default (Intl);"]},"metadata":{},"sourceType":"module"}