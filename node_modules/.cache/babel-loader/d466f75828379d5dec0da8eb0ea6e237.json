{"ast":null,"code":"var _jsxFileName = \"/home/discovery/Documentos/repos/work/clock--ie/src/containers/app.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import { compose } from 'redux';\n// import { connect } from 'react-redux';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  componentDidMount() {\n    ReactGA.event({\n      category: 'UserFlow',\n      action: 'LMS_START'\n    });\n  }\n\n  render() {\n    const isSignup = window.location.pathname.split('/')[1] === 'signup';\n\n    if (isSignup && this.props.addUserLoading) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    } else if (isSignup && this.props.addUserLoaded && this.props.addUserError) {\n      alert(this.props.addUserError.message);\n      this.props.resetFetchAndAddUser();\n      return null;\n    } else if (isSignup && this.props.addUserLoaded && this.props.addUserData) {\n      if (this.props.firebase.auth().currentUser) {\n        window.location = '/'; // FIXME: very ugly....\n\n        return null;\n      }\n\n      this.props.firebase.auth().signInWithEmailAndPassword(this.props.signInCredentials.email, this.props.signInCredentials.password).then(() => {\n        window.location = '/'; // FIXME: very ugly....\n      }).catch(this.props.updateSigninError);\n      return null;\n    }\n\n    if (!this.props.auth.isLoaded || !this.props.profile.isLoaded) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Intl, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.auth.isEmpty ? React.createElement(Route, {\n      path: \"/:action?/:cohortid?\",\n      component: SignIn,\n      authError: this.props.authError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : React.createElement(ScrollToTop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(WrappedRoute, Object.assign({\n      path: \"/cohorts/:cohortid/courses/:courseid/:unitid/:partid?/:exerciseid?\",\n      component: cohortSwitch({\n        default: Unit,\n        l4b: UnitCorporate\n      }),\n      mainNav: false\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/cohorts/:cohortid/courses/:courseid\",\n      component: cohortSwitch({\n        default: Course,\n        l4b: CourseCorporate\n      })\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/cohorts/:cohortid/users/:uid/projects/:projectid/private\",\n      component: ReviewProjectPrivate\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/cohorts/:cohortid/users/:uid/projects/:projectid\",\n      component: ReviewProjectPublic\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/cohorts/:cohortid/users/:uid\",\n      component: User\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/cohorts/:cohortid/users\",\n      component: CohortUsers\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/cohorts/:cohortid/courses\",\n      component: Cohort\n    }, this.props, {\n      adminOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/cohorts\",\n      component: Cohorts\n    }, this.props, {\n      adminOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/search\",\n      component: SearchResults\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/projects/:projectid\",\n      component: Project\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/projects\",\n      component: Projects\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/courses\",\n      component: cohortSwitch({\n        default: Courses,\n        l4b: CoursesCorporate\n      })\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      path: \"/settings\",\n      component: Settings\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(WrappedRoute, Object.assign({\n      exact: true,\n      path: \"/\",\n      component: Dashboard\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))))));\n  }\n\n} // App.propTypes = {\n// };\n// App.defaultProps = {\n// };\n// const mapStateToProps = ({ firebase: { authError, auth, profile }, signin }) => ({\n//   authError,\n//   auth,\n//   profile,\n//   signInCredentials: signin.data,\n//   addUserLoading: signin.addUserLoading,\n//   addUserLoaded: signin.addUserLoaded,\n//   addUserError: signin.addUserError,\n//   addUserData: signin.addUserData,\n// });\n// const mapDispatchToProps = {\n//   updateSigninError,\n//   resetFetchAndAddUser,\n// };\n// export default compose(\n//   firestoreConnect(),\n//   connect(mapStateToProps, mapDispatchToProps),\n// )(App);\n\n\nexport default App;","map":{"version":3,"sources":["/home/discovery/Documentos/repos/work/clock--ie/src/containers/app.js"],"names":["React","Component","PropTypes","BrowserRouter","Router","Route","Switch","App","componentDidMount","ReactGA","event","category","action","render","isSignup","window","location","pathname","split","props","addUserLoading","addUserLoaded","addUserError","alert","message","resetFetchAndAddUser","addUserData","firebase","auth","currentUser","signInWithEmailAndPassword","signInCredentials","email","password","then","catch","updateSigninError","isLoaded","profile","isEmpty","SignIn","authError","cohortSwitch","default","Unit","l4b","UnitCorporate","Course","CourseCorporate","ReviewProjectPrivate","ReviewProjectPublic","User","CohortUsers","Cohort","Cohorts","SearchResults","Project","Projects","Courses","CoursesCorporate","Settings","Dashboard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  componentDidMount() {\n    ReactGA.event({\n      category: 'UserFlow',\n      action: 'LMS_START',\n    });\n  }\n\n  render() {\n    const isSignup = window.location.pathname.split('/')[1] === 'signup';\n\n    if (isSignup && this.props.addUserLoading) {\n      return (<Loader />);\n    } else if (isSignup && this.props.addUserLoaded && this.props.addUserError) {\n      alert(this.props.addUserError.message);\n      this.props.resetFetchAndAddUser();\n      return null;\n    } else if (isSignup && this.props.addUserLoaded && this.props.addUserData) {\n      if (this.props.firebase.auth().currentUser) {\n        window.location = '/'; // FIXME: very ugly....\n        return null;\n      }\n\n      this.props.firebase.auth().signInWithEmailAndPassword(\n        this.props.signInCredentials.email,\n        this.props.signInCredentials.password,\n      )\n        .then(() => {\n          window.location = '/'; // FIXME: very ugly....\n        })\n        .catch(this.props.updateSigninError);\n\n      return null;\n    }\n\n\n    if (!this.props.auth.isLoaded || !this.props.profile.isLoaded) {\n      return (<Loader />);\n    }\n\n    return (\n      <Intl {...this.props}>\n        <Router>\n          {this.props.auth.isEmpty\n            ? (\n              <Route\n                path=\"/:action?/:cohortid?\"\n                component={SignIn}\n                authError={this.props.authError}\n              />\n            )\n            : (\n              <ScrollToTop>\n                <Switch>\n                  <WrappedRoute\n                    path=\"/cohorts/:cohortid/courses/:courseid/:unitid/:partid?/:exerciseid?\"\n                    component={cohortSwitch({ default: Unit, l4b: UnitCorporate })}\n                    mainNav={false}\n                    {...this.props}\n                  />\n                  <WrappedRoute\n                    path=\"/cohorts/:cohortid/courses/:courseid\"\n                    component={cohortSwitch({ default: Course, l4b: CourseCorporate })}\n                    {...this.props}\n                  />\n                  <WrappedRoute\n                    path=\"/cohorts/:cohortid/users/:uid/projects/:projectid/private\"\n                    component={ReviewProjectPrivate}\n                    {...this.props}\n                  />\n                  <WrappedRoute\n                    path=\"/cohorts/:cohortid/users/:uid/projects/:projectid\"\n                    component={ReviewProjectPublic}\n                    {...this.props}\n                  />\n                  <WrappedRoute path=\"/cohorts/:cohortid/users/:uid\" component={User} {...this.props} />\n                  <WrappedRoute path=\"/cohorts/:cohortid/users\" component={CohortUsers} {...this.props} />\n                  <WrappedRoute path=\"/cohorts/:cohortid/courses\" component={Cohort} {...this.props} adminOnly />\n                  <WrappedRoute path=\"/cohorts\" component={Cohorts} {...this.props} adminOnly />\n                  <WrappedRoute path=\"/search\" component={SearchResults} {...this.props} />\n                  <WrappedRoute path=\"/projects/:projectid\" component={Project} {...this.props} />\n                  <WrappedRoute path=\"/projects\" component={Projects} {...this.props} />\n                  <WrappedRoute path=\"/courses\" component={cohortSwitch({ default: Courses, l4b: CoursesCorporate })} {...this.props} />\n                  <WrappedRoute path=\"/settings\" component={Settings} {...this.props} />\n                  <WrappedRoute exact path=\"/\" component={Dashboard} {...this.props} />\n                </Switch>\n              </ScrollToTop>\n            )\n          }\n        </Router>\n      </Intl>\n    );\n  }\n}\n\n// App.propTypes = {\n\n// };\n\n\n// App.defaultProps = {\n  \n// };\n\n\n// const mapStateToProps = ({ firebase: { authError, auth, profile }, signin }) => ({\n//   authError,\n//   auth,\n//   profile,\n//   signInCredentials: signin.data,\n//   addUserLoading: signin.addUserLoading,\n//   addUserLoaded: signin.addUserLoaded,\n//   addUserError: signin.addUserError,\n//   addUserData: signin.addUserData,\n// });\n\n\n// const mapDispatchToProps = {\n//   updateSigninError,\n//   resetFetchAndAddUser,\n// };\n\n\n// export default compose(\n//   firestoreConnect(),\n//   connect(mapStateToProps, mapDispatchToProps),\n// )(App);\nexport default (App);"]},"metadata":{},"sourceType":"module"}