{"ast":null,"code":"import _objectWithoutProperties from \"/home/discovery/Documentos/repos/work/clock--ie/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/discovery/Documentos/repos/work/clock--ie/src/components/wrapped-route.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom'; // import ReactGA from 'react-ga';\n\nimport { withStyles } from '@material-ui/core/styles'; // import WithMainNav from './with-main-nav';\n\nconst styles = theme => ({\n  container: {\n    minHeight: '100vh',\n    position: 'relative'\n  },\n  footer: {\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: '#f7f7f7',\n    bottom: '-100px',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      marginLeft: '0'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${theme.leftDrawerWidth}px)`,\n      marginLeft: theme.leftDrawerWidth\n    }\n  },\n  partner: {\n    width: '10%',\n    minWidth: '150px',\n    maxWidth: '200px'\n  }\n});\n/* eslint-disable react/destructuring-assignment */\n\n\nconst WrappedRoute = (_ref) => {\n  let path = _ref.path,\n      exact = _ref.exact,\n      Component = _ref.component,\n      mainNav = _ref.mainNav,\n      classes = _ref.classes,\n      adminOnly = _ref.adminOnly,\n      props = _objectWithoutProperties(_ref, [\"path\", \"exact\", \"component\", \"mainNav\", \"classes\", \"adminOnly\"]);\n\n  // if (adminOnly && (!props.profile.roles || !props.profile.roles.admin)) {\n  //   return <Redirect to=\"/\" />;\n  // }\n  return React.createElement(Route, {\n    exact: !!exact,\n    path: path,\n    render: routeProps => {\n      // Google Analytics tracking...\n      // const { pathname, search } = routeProps.location;\n      // const page = pathname + search;\n      // ReactGA.set({ page });\n      // ReactGA.pageview(page);\n      return React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Component, Object.assign({}, props, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n};\n\nWrappedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  exact: PropTypes.bool,\n  component: PropTypes.func.isRequired,\n  mainNav: PropTypes.bool,\n  adminOnly: PropTypes.bool,\n  classes: PropTypes.shape({\n    container: PropTypes.string.isRequired,\n    footer: PropTypes.string.isRequired,\n    partner: PropTypes.string.isRequired\n  }).isRequired,\n  profile: PropTypes.shape({\n    roles: PropTypes.shape({\n      admin: PropTypes.bool\n    })\n  }).isRequired\n};\nWrappedRoute.defaultProps = {\n  exact: false,\n  mainNav: true,\n  adminOnly: false\n};\nexport default withStyles(styles)(WrappedRoute);","map":{"version":3,"sources":["/home/discovery/Documentos/repos/work/clock--ie/src/components/wrapped-route.jsx"],"names":["React","PropTypes","Route","Redirect","withStyles","styles","theme","container","minHeight","position","footer","textAlign","backgroundColor","bottom","breakpoints","down","width","marginLeft","up","leftDrawerWidth","partner","minWidth","maxWidth","WrappedRoute","path","exact","Component","component","mainNav","classes","adminOnly","props","routeProps","propTypes","string","isRequired","bool","func","shape","profile","roles","admin","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n// import ReactGA from 'react-ga';\nimport { withStyles } from '@material-ui/core/styles';\n// import WithMainNav from './with-main-nav';\n\n\n\nconst styles = theme => ({\n  container: {\n    minHeight: '100vh',\n    position: 'relative',\n  },\n  footer: {\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: '#f7f7f7',\n    bottom: '-100px',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      marginLeft: '0',\n    },\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${theme.leftDrawerWidth}px)`,\n      marginLeft: theme.leftDrawerWidth,\n    },\n  },\n  partner: {\n    width: '10%',\n    minWidth: '150px',\n    maxWidth: '200px',\n  },\n});\n\n\n/* eslint-disable react/destructuring-assignment */\nconst WrappedRoute = ({\n  path,\n  exact,\n  component: Component,\n  mainNav,\n  classes,\n  adminOnly,\n  ...props\n}) => {\n  // if (adminOnly && (!props.profile.roles || !props.profile.roles.admin)) {\n  //   return <Redirect to=\"/\" />;\n  // }\n\n  return (\n    <Route\n      exact={!!exact}\n      path={path}\n      render={(routeProps) => {\n        // Google Analytics tracking...\n        // const { pathname, search } = routeProps.location;\n        // const page = pathname + search;\n        // ReactGA.set({ page });\n        // ReactGA.pageview(page);\n\n        return (\n          <div className={classes.container}>\n            {/* {mainNav\n              ? <WithMainNav component={Component} {...props} {...routeProps} />\n              : <Component {...props} {...routeProps} />} */}\n              <Component {...props} {...routeProps} />\n          </div>\n        );\n      }}\n    />\n  );\n};\n\n\nWrappedRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  exact: PropTypes.bool,\n  component: PropTypes.func.isRequired,\n  mainNav: PropTypes.bool,\n  adminOnly: PropTypes.bool,\n  classes: PropTypes.shape({\n    container: PropTypes.string.isRequired,\n    footer: PropTypes.string.isRequired,\n    partner: PropTypes.string.isRequired,\n  }).isRequired,\n  profile: PropTypes.shape({\n    roles: PropTypes.shape({\n      admin: PropTypes.bool,\n    }),\n  }).isRequired,\n};\n\n\nWrappedRoute.defaultProps = {\n  exact: false,\n  mainNav: true,\n  adminOnly: false,\n};\n\n\nexport default withStyles(styles)(WrappedRoute);\n"]},"metadata":{},"sourceType":"module"}