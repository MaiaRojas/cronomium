{"ast":null,"code":"var _jsxFileName = \"/home/discovery/Documentos/repos/work/clock--ie/src/intl/index.jsx\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\n// import { firestoreConnect } from 'react-redux-firebase';\n\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport es from 'react-intl/locale-data/es';\nimport messages from './messages';\naddLocaleData([...en, ...es]); // const prefixToLocale = {\n//   en: 'en-US',\n//   es: 'es-ES',\n// };\n// const browserLocale = (navigator.languages && navigator.languages[0])\n//   || navigator.language\n//   || navigator.userLanguage;\n// const getLocale = (preferredLang) => {\n//   if (preferredLang && messages[preferredLang]) {\n//     return preferredLang;\n//   }\n//   if (preferredLang && messages[prefixToLocale[preferredLang.split('-')[0]]]) {\n//     return prefixToLocale[preferredLang.split('-')[0]];\n//   }\n//   if (browserLocale && messages[browserLocale]) {\n//     return browserLocale;\n//   }\n//   if (browserLocale && messages[prefixToLocale[browserLocale.split('-')[0]]]) {\n//     return prefixToLocale[browserLocale.split('-')[0]];\n//   }\n//   return 'es-ES';\n// };\n\nconst Intl = ({\n  profile,\n  children\n}) => {\n  // const locale = getLocale(profile.locale);\n  const locale = 'es-ES';\n  return React.createElement(IntlProvider, {\n    locale: locale,\n    messages: messages[locale],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, children);\n};\n\nIntl.propTypes = {// profile: PropTypes.shape({\n  //   locale: PropTypes.string,\n  // }).isRequired,\n  // children: PropTypes.element.isRequired,\n  // campuses: PropTypes.arrayOf(PropTypes.shape({})),\n}; // Intl.defaultProps = {\n//   campuses: undefined,\n// };\n\nexport default Intl;","map":{"version":3,"sources":["/home/discovery/Documentos/repos/work/clock--ie/src/intl/index.jsx"],"names":["React","addLocaleData","IntlProvider","en","es","messages","Intl","profile","children","locale","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGAJ,aAAa,CAAC,CAAC,GAAGE,EAAJ,EAAQ,GAAGC,EAAX,CAAD,CAAb,C,CAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAME,IAAI,GAAG,CAAC;AACZC,EAAAA,OADY;AAEZC,EAAAA;AAFY,CAAD,KAGP;AACJ;AACA,QAAMC,MAAM,GAAG,OAAf;AACA,SACE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAA8B,IAAA,QAAQ,EAAEJ,QAAQ,CAACI,MAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CAXD;;AAcAF,IAAI,CAACI,SAAL,GAAiB,CACf;AACA;AACA;AACA;AACA;AALe,CAAjB,C,CASA;AACA;AACA;;AAGA,eAAgBJ,IAAhB","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\n// import { firestoreConnect } from 'react-redux-firebase';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport es from 'react-intl/locale-data/es';\nimport messages from './messages';\n\n\naddLocaleData([...en, ...es]);\n\n\n// const prefixToLocale = {\n//   en: 'en-US',\n//   es: 'es-ES',\n// };\n\n\n// const browserLocale = (navigator.languages && navigator.languages[0])\n//   || navigator.language\n//   || navigator.userLanguage;\n\n\n// const getLocale = (preferredLang) => {\n//   if (preferredLang && messages[preferredLang]) {\n//     return preferredLang;\n//   }\n//   if (preferredLang && messages[prefixToLocale[preferredLang.split('-')[0]]]) {\n//     return prefixToLocale[preferredLang.split('-')[0]];\n//   }\n\n//   if (browserLocale && messages[browserLocale]) {\n//     return browserLocale;\n//   }\n//   if (browserLocale && messages[prefixToLocale[browserLocale.split('-')[0]]]) {\n//     return prefixToLocale[browserLocale.split('-')[0]];\n//   }\n\n//   return 'es-ES';\n// };\n\n\nconst Intl = ({\n  profile,\n  children,\n}) => {\n  // const locale = getLocale(profile.locale);\n  const locale = 'es-ES';\n  return (\n    <IntlProvider locale={locale} messages={messages[locale]}>\n      {children}\n    </IntlProvider>\n  );\n};\n\n\nIntl.propTypes = {\n  // profile: PropTypes.shape({\n  //   locale: PropTypes.string,\n  // }).isRequired,\n  // children: PropTypes.element.isRequired,\n  // campuses: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\n\n// Intl.defaultProps = {\n//   campuses: undefined,\n// };\n\n\nexport default (Intl);"]},"metadata":{},"sourceType":"module"}